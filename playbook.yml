---
##########################
# Global variables are defined in group_vars/all.yml
##########################
- hosts: nodes
  tasks:
    # SmartOS
    - block:
        - name: Ensure pgkin cache updated (SmartOS)
          pkgin: update_cache=yes
        - name: Ensure pv installed (SmartOS)
          pkgin: name=pv state=present
        - name: Ensure mbuffer installed (SmartOS)
          pkgin: name=mbuffer state=present
        - name: Ensure zones scrubbing is enabled in cron. (SmartOS)
          cron:
            name: "Scrub zones pool twice a month"
            minute: "0"
            hour: "3"
            day: "1,15"
            job: "/usr/sbin/zpool scrub zones"
      when: ansible_distribution == "SmartOS"

    # OmniOS
    - block:
        - name: Ensure NTP service is enabled and started.
          service: name=ntp enabled=yes state=started
        - name: Ensure rpool scrubbing is enabled in cron. (OmniOS)
          cron:
            name: "Scrub rpool pool twice a month"
            minute: "0"
            hour: "3"
            day: "1,15"
            job: "/usr/sbin/zpool scrub rpool"
      when: ansible_distribution == "OmniOS"

  #
  # Host specific: storage00
  #
- hosts: storage00
  roles:
    - cifs_server
  tasks:
    # Make sure and scrub the tank pool
    - name: Ensure tank scrubbing is enabled in cron.
      cron:
        name: "Scrub tank pool twice a month"
        minute: "0"
        hour: "4"
        day: "1,15"
        job: "/usr/sbin/zpool scrub tank"

    # Create groups
    - name: Adding groups
      group:
        name: "{{ item.name }}"
        state: present
      with_items: "{{ host_groups_present }}"
      when: host_groups_present is defined
    
    # Remove groups
    - name: Removing groups
      group:
        name: "{{ item.name }}"
        state: absent
      with_items: "{{ host_groups_absent }}"
      when: host_groups_absent is defined

- hosts: cifs_server_zone_hosts
  roles:
    - role: cifs_server_zone_host
      cifs_server_zone_alias: cifs
      cifs_server_zone_uuid: "{{ hostvars['nas01.zone']['zone_uuid']|default(omit) }}"
      cifs_server_zone_ip: "{{ hostvars['nas01.zone']['ansible_host'] }}"  

- hosts: plex_server_zone_hosts
  roles:
    - role: plex_server_zone_host
      plex_server_zone_alias: plex
      plex_server_zone_ip: "{{ hostvars['plex01.zone']['ansible_host']}}"

- hosts: rabbitmq_server_zone_hosts
  roles:
    - role: rabbitmq_server_zone_host
      rabbitmq_server_zone_alias: rabbitma
      rabbitmq_server_zone_ip: "{{ hostvars['rabbitmq01.zone']['ansible_host']}}"

- hosts: redis_datastore_zone_hosts
  roles:
    - role: redis_datastore_zone_host
      redis_datastore_zone_alias: redis
      redis_datastore_zone_ip: "{{ hostvars['redis01.zone']['ansible_host']}}"

- hosts: samba_domain_controller_zone_hosts
  roles:
    - role: samba_domain_controller_zone_host
      samba_domain_controller_zone_alias: sambadc
      samba_domain_controller_zone_ip: "{{ hostvars['sambadc01.zone']['ansible_host']}}"

- hosts: sensu_server_zone_hosts
  roles:
    - role: sensu_server_zone_host
      sensu_server_zone_alias: sensu
      sensu_server_zone_ip: "{{ hostvars['sensu01.zone']['ansible_host']}}"

## Redis Datastores
- hosts: redis_datastores
  roles:
    - role: redis_datastore

## RabbitMQ Servers
- hosts: rabbitmq_servers
  roles:
    - role: rabbitmq_server

## Samba4 Domain Controllers
- hosts: samba_domain_controllers
  roles:
    - role: samba_domain_controller

## Storage Servers
- hosts: storage_servers
  roles:
    - cifs_server
    - ansible-resolv

## Plex Media Servers
- hosts: plex_servers
  roles:
    - plex_server

## Unifi Servers
- hosts: unifi_servers
  roles:
    - unifi_server

## Sensu Servers
- hosts: sensu_servers
  roles:
    - sensu_server